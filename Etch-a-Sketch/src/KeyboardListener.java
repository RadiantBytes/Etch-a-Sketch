/**
 * Keyboard listener wrapper class
 * 
 * Last Modified on March 30, 2014
 * @author  Josh Hursey
 * 
 *  *** Do NOT Edit this file ***
 */
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;


@SuppressWarnings("serial")
public class KeyboardListener implements KeyListener {
    /* Driver to tell about any action events. */
    private Driver driver;

    /* Copy of the Window, in case we need it later */
    private Window window;

    public final int KEYBOARD_UP    = KeyEvent.VK_UP;
    public final int KEYBOARD_DOWN  = KeyEvent.VK_DOWN;
    public final int KEYBOARD_LEFT  = KeyEvent.VK_LEFT;
    public final int KEYBOARD_RIGHT = KeyEvent.VK_RIGHT;
    
    /**
     * Window to choose a shot.
     * This is a modal window meaning that the rest of the program pauses while
     * this window is present.
     * 
     * You can call it like the following.
     * <pre><code>
     *  ShotChoiceWindow choiceWin = new ShotChoiceWindow(window, "Example Title");
     *  ShotChoice myShot = choiceWin.getShotChosen();
     * </code></pre>
     * 
     * @param parentWindow
     * @param title
     */
    public KeyboardListener(Driver d, Window w ) {
        super();
        driver = d;
        window = w;
        w.getJFrame().addKeyListener( this );
    }

    @Override
    public void keyPressed(KeyEvent e) {
        // to determine what key was pressed, we can get is code
        int i = e.getKeyCode();
        // Hand the code to the Driver
        driver.handleKeyboardEvent( i );
    }

   @Override
    public void keyTyped(KeyEvent e) {
        // TODO Auto-generated method stub
    }

     @Override
    public void keyReleased(KeyEvent e) {
        // TODO Auto-generated method stub
    }
}
